// Firebase config
const firebaseConfig = {
  apiKey: "AIzaSyBbfR-0LMAPCEIxnpXpp6oWcfqKT0Z3Ai8",
  authDomain: "uascoin-game.firebaseapp.com",
  databaseURL: "https://uascoin-game-default-rtdb.firebaseio.com",
  projectId: "uascoin-game",
  storageBucket: "uascoin-game.appspot.com",
  messagingSenderId: "517394758183",
  appId: "1:517394758183:web:85a1c0164ce16a22f3e23a"
};

firebase.initializeApp(firebaseConfig);
const db = firebase.database();

// User Management
let userId = localStorage.getItem("userId");
if (!userId) {
  userId = "user_" + Date.now();
  localStorage.setItem("userId", userId);
}

let userData = {
  coins: 0,
  energy: 100,
  skin: "bronze",
  skinInventory: ["bronze"],
  referralCode: userId,
  referredBy: null,
  referralTeam: [],
  autoBot: false,
  multiplier: 1,
  bonuses: 0
};

function loadUserData() {
  db.ref("users/" + userId).on("value", (snapshot) => {
    const data = snapshot.val();
    if (data) {
      userData = { ...userData, ...data };
      updateUI();
    } else {
      saveUserData();
    }
  });
}

function saveUserData() {
  db.ref("users/" + userId).set(userData)
    .catch(err => console.error("Save error:", err));
}

function handleReferral() {
  const urlParams = new URLSearchParams(window.location.search);
  const refCode = urlParams.get('start');
  
  if (refCode && refCode !== userId && !userData.referredBy) {
    userData.referredBy = refCode;
    
    db.ref(`users/${refCode}/referralTeam`).once("value", (snapshot) => {
      const team = snapshot.val() || [];
      if (!team.includes(userId)) {
        team.push(userId);
        db.ref(`users/${refCode}`).update({
          referralTeam: team,
          bonuses: firebase.database.ServerValue.increment(1000)
        });
      }
    });
    
    saveUserData();
  }
}

function tapCoin() {
  if (userData.energy <= 0) return;

  const earned = userData.multiplier;
  userData.coins += earned;
  userData.energy -= 2;

  if (userData.referredBy) {
    db.ref(`users/${userData.referredBy}/bonuses`).transaction(current => {
      return (current || 0) + Math.round(earned * 0.1);
    });
  }

  updateUI();
  saveUserData();
}

setInterval(() => {
  if (userData.autoBot && userData.energy > 0) {
    tapCoin();
  }
}, 2000);

setInterval(() => {
  if (userData.energy < 100) {
    userData.energy = Math.min(userData.energy + 1, 100);
    updateUI();
    saveUserData();
  }
}, 3000);

const skinPrices = {
  pakistan: 5, india: 5, iran: 5, turkey: 5,
  china: 5, usa: 5, uk: 5, germany: 5,
  france: 5, italy: 5, africa: 5, brazil: 5,
  saudiaarab: 5
};

function buySkin(skinName) {
  if (!userData.skinInventory.includes(skinName)) {
    openModal(skinName);
  } else {
    equipSkin(skinName);
  }
}

function equipSkin(skinName) {
  if (userData.skinInventory.includes(skinName)) {
    userData.skin = skinName;
    document.getElementById("coinImage").src = `${skinName}_coin.png`;
    saveUserData();
  }
}

let pendingPurchase = null;

function verifyPayment() {
  const txHash = document.getElementById("txHash").value;
  if (txHash.length > 10) {
    handlePurchaseSuccess(pendingPurchase);
    closeModal();
  }
}

function handlePurchaseSuccess(item) {
  switch(item) {
    case 'speedBoost2': userData.multiplier = 2; break;
    case 'speedBoost5': userData.multiplier = 5; break;
    case 'speedBoost10': userData.multiplier = 10; break;
    case 'energyRefill2': userData.energy += 2; break;
    case 'energyRefill10': userData.energy += 10; break;
    case 'autoBot': userData.autoBot = true; break;
    default:
      if (skinPrices[item]) {
        if (!userData.skinInventory.includes(item)) {
          userData.skinInventory.push(item);
        }
        equipSkin(item);
      }
  }
  saveUserData();
  updateUI();
}

function updateUI() {
  document.getElementById("tapCount").textContent = `UAS: ${userData.coins}`;
  document.getElementById("energyFill").style.width = `${userData.energy}%`;
  document.getElementById("referralLink").href =
    `https://t.me/UASReferralBot?start=${userData.referralCode}`;
}

function showTab(id) {
  document.querySelectorAll(".tab-section").forEach(el => el.classList.remove("active"));
  document.getElementById(id).classList.add("active");
}

function openModal(item) {
  pendingPurchase = item;
  document.getElementById("paymentModal").classList.add("active");
}

function closeModal() {
  document.getElementById("paymentModal").classList.remove("active");
}

document.addEventListener("DOMContentLoaded", () => {
  loadUserData();
  handleReferral();

  const skins = Object.keys(skinPrices);
  const skinsList = document.getElementById("skinsList");
  skins.forEach(skin => {
    const div = document.createElement("div");
    div.className = "skin-item";
    div.innerHTML = `
      <img src="${skin}.png" class="preview-img">
      ${skin.charAt(0).toUpperCase() + skin.slice(1)}
      <button class="buy-btn" onclick="buySkin('${skin}')">
        ${userData.skinInventory.includes(skin) ? 'Equip' : '5 USDT'}
      </button>
    `;
    skinsList.appendChild(div);
  });
});
